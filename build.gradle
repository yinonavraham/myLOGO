apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.6

def swtArchitecture = 'win32.win32.x86_64'

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
	}
}

repositories {
	jcenter()
}
dependencies {
	compile group: 'org.eclipse.swt', name: "org.eclipse.swt.$swtArchitecture", version: '4.3'
}

apply plugin: 'com.jfrog.bintray'

group = groupId
version = versionId

jar {
	manifest {
		def jarVersion = versionId
		attributes 'Specification-Title': jarTitle, 'Specification-Version': jarVersion, 'Specification-Vendor': jarVendor
		attributes 'Implementation-Title': jarTitle, 'Implementation-Version': jarVersion, 'Implementation-Vendor': jarVendor 
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

mainClassName = 'ynn.mylogo.ui.swt.Main'

def groupPath = group.replaceAll('\\.', '/')
def bintrayVersion = versionId

bintray {
	user = bintrayUser
	key = bintrayApiKey

	configurations = ['archives']
	dryRun = true //Whether to run this as dry-run, without deploying
	publish = false //If version should be auto published after an upload
	pkg {
		repo = bintrayRepo
		name = bintrayPackage
		desc = 'myLOGO core - parser, design-time model, runtime model and basic UI'
		websiteUrl = githubUrl
		issueTrackerUrl = "${githubUrl}/issues"
		vcsUrl = "${githubUrl}.git"
		licenses = ['MIT']
		labels = ['LOGO', 'parser']
		publicDownloadNumbers = true
		//Optional version descriptor
		version {
			name = bintrayVersion
			vcsTag = "v${bintrayVersion}"
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.6' //version required
}
